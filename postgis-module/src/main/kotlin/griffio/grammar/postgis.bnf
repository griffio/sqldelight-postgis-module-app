{
  // Specify the parent parser.
  // Use meta rules "<< >>" to reference core SqlParse rules statically, as currently only immediate parent class inheritance "{}" is supported

  overrides="app.cash.sqldelight.dialects.postgresql.grammar.PostgreSqlParser"
  elementTypeClass = "com.alecstrong.sql.psi.core.SqlElementType"

  implements="com.alecstrong.sql.psi.core.psi.SqlCompositeElement"
  extends="com.alecstrong.sql.psi.core.psi.SqlCompositeElementImpl"
  psiClassPrefix = "PostGis"

  parserImports=[
    "static com.alecstrong.sql.psi.core.psi.SqlTypes.COMMA"
    "static com.alecstrong.sql.psi.core.psi.SqlTypes.LP"
    "static com.alecstrong.sql.psi.core.psi.SqlTypes.RP"

    "static com.alecstrong.sql.psi.core.SqlParserUtil.signedNumberExt"
    "static com.alecstrong.sql.psi.core.SqlParser.signed_number_real"
  ]
}

type_name ::= geometry_data_type | geography_data_type {
  extends = "app.cash.sqldelight.dialects.postgresql.grammar.psi.impl.PostgreSqlTypeNameImpl"
  implements = "app.cash.sqldelight.dialects.postgresql.grammar.psi.PostgreSqlTypeName"
}

geometry_data_type ::= 'GEOMETRY'   [ LP ( 'Point' | 'PointM' | 'PointZ' | 'PointZM' ) COMMA sql_signed_number RP ]
geography_data_type ::= 'GEOGRAPHY' [ LP ( 'Point' | 'PointM' | 'PointZ' | 'PointZM' ) COMMA sql_signed_number RP ]

private sql_signed_number ::= <<signedNumberExt <<signed_number_real>>>>
